@page "/auth/login"
@layout AuthLayout
@inject AuthenticationServices authServices
@inject NavigationManager navigationManager


<div class="app-container app-theme-white body-tabs-shadow">
    <EditForm Model="model" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator />
     
        <div class="app-container">
            <div class="h-100 bg-plum-plate bg-animation">
                <div class="d-flex h-100 justify-content-center align-items-center">
                    <div class="mx-auto app-login-box col-md-8">
                        <div class="app-logo-inverse mx-auto mb-3"></div>
                        <div class="modal-dialog w-100 mx-auto">
                            <div class="modal-content">
                                <div class="modal-body">
                                    <div class="h5 modal-title text-center">
                                        <h4 class="mt-2">
                                            <div>Inicie sesión en su cuenta a continuación</div>
                                          
                                        </h4>
                                    </div>
                                    <form class="">
                                        @if (!string.IsNullOrWhiteSpace(message))
                                        {
                                        <div class="alert alert-danger">@message</div>
                                        }
                                        <div class="form-row">
                                            <div class="col-md-12">
                                                <div class="position-relative form-group">
                                                    <input name="email" @bind-value="model.Email" id="exampleEmail" placeholder="Email aqui..." type="email" class="form-control">
                                                    <ValidationMessage For="@(()=> model.Email)" />
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="position-relative form-group">
                                                    <input name="password" @bind-value="model.Password" id="examplePassword" placeholder="Password aqui..." type="password" class="form-control">
                                                    <ValidationMessage For="@(()=> model.Password)" />
                                                </div>
                                            </div>
                                        </div>

                                    </form>
                                    <div class="divider"></div>
                                    <h6 class="mb-0"> ¿No tienes cuenta? <a href="auth/register" class="text-primary">Regístrate ahora</a></h6>
                                </div>
                                <div class="modal-footer clearfix">

                                    <div class="float-right">
                                        <button type="submit" class="btn btn-primary btn-lg" >Login</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center text-white opacity-8 mt-3">Copyright © Lewis Maximo 2020</div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
</div>


@code {

    LoginViewModel model = new LoginViewModel();

    string message = string.Empty;

    public async Task LoginUser()
    {
        var result = await authServices.LoginUserAsync(model);
        if (result.IsSuccess)
        {
            message = result.Message;
        }
        else
        {
            message = result.Message;
        }
    }

}